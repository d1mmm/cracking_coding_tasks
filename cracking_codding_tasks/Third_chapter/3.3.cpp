/*
* Как известно, слишком высокая стопка тарелок может развалиться. Следовательно, в реальной жизни, когда высота стопки превысила бы некоторое
пороговое значение, мы начали бы складывать тарелки в новую стопку. Реализуйте структуру данных SetOfStacks, имитирующую реальную ситуацию.
Структура SetOfStack должна состоять из нескольких стеков, новый стек
создается, как только предыдущий достигнет порогового значения. Методы
SetOfStacks . push () и SetOfStacks . рор () должны вести себя так же, как при
работе с одним стеком (то есть метод рор() должен возвращать те же значения, которые бы он возвращал при использовании одного большого стека).
Дополнительно
Реализуйте функцию popAt ( int index ), которая осуществляет операцию рор
с заданным внутренним стеком.
*/

#include <iostream>
#include "../my_stack.h"
#include "../set_of_stacks.h"

//int main()
//{
//    const int limit = 2;
//    stacks_set<int> s(limit);
//    s.push(2);
//    s.push(3);
//
//    s.push(4);
//    s.push(1);
//    
//    s.push(5);
//    s.push(8);
//    
//    s.push(9);
//    s.push(10);
//    s.popAt(2);
//
//    return 0;
//}